params {

    BAM_filelist = "/home/stithi/CoCoRV_pipeline_bitbucket/cocorv_pipeline/coverage_nextflow_conda/sample-input/bamFiles.txt"

    BED_file = "/home/stithi/CoCoRV_pipeline_bitbucket/cocorv_pipeline/coverage_nextflow_conda/sample-input/sample-bed.bed"

    outdir = "/home/stithi/CoCoRV_pipeline_bitbucket/cocorv_pipeline/coverage_nextflow_conda/sample-output"

    reference_build = "GRCh37" // reference build of BAM and BED files, could be "GRCh37" or "GRCh38"
}

profiles {
    local {
        process.executor = 'local'
    }

    cluster {
        process.executor = 'lsf'
        executor.queueSize = 1000
        process.queue = 'standard' // 'priority'
        process.clusterOptions = '-P ALS'
      
        process {    
            withName: bam_to_bw {
	          module = ['samtools/1.12']
            cpus = 1
	          memory ='4GB' 
	        }  
        }

        process {    
            withName: bw_to_coverage_sum {
	          module = ['python/3.7.0']
            cpus = 1
	          memory ='4GB' 
	        }  
        }
    }

    conda {
        process.executor = 'lsf'
        executor.queueSize = 1000
        process.queue = 'standard' // 'priority'
        process.clusterOptions = '-P ALS'
        process.memory = '4GB'
        conda.enabled = true
        conda.useMicromamba = true
        process.conda = '/research/rgs01/home/clusterHome/stithi/micromamba/envs/coverage-env'
    }
}

dag {
  enabled = true
  overwrite = true
  file = "${params.outdir}/pipeline_dag.png"
}
report {
  enabled = true
  overwrite = true
  file = "${params.outdir}/execution_report.html"
}
timeline {
  enabled = true
  overwrite = true
  file = "${params.outdir}/execution_timeline.html"
}
